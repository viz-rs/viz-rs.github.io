name: Rust

on:
  pull_request:
  # Trigger the workflow every time you push to the `main` branch
  # Using a different branch name? Replace `main` with your branchâ€™s name
  push:
    branches: [main]
  # Allows you to run this workflow manually from the Actions tab on GitHub.
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

env:
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  RUSTFLAGS: -D warnings
  RUSTUP_MAX_RETRIES: 10

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
      - name: Get npm cache directory
        id: npm-cache-dir
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - uses: actions/cache@v3
        id: npm-cache # use this to check for `cache-hit` ==> if: steps.npm-cache.outputs.cache-hit != 'true'
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - run: |
          cd app && npm i

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@v1  
        with:
          toolchain: nightly
          target: wasm32-unknown-unknown

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - run: |
          if [ ! -f ~/.cargo/bin/trunk ]; then
            # cargo install --locked trunk
            cargo install --git https://github.com/thedodd/trunk.git --locked
          fi
          if [ ! -f ~/.cargo/bin/just ]; then
            cargo install --locked just
          fi

      - name: Build
        run: |
          mkdir -p dist/{en,zh-cn}
          just build-en
          just build-zh-cn

  # Deploy job
  deploy:
    # Add a dependency to the build job
    needs: build

    # Deploy to the cloudflare pages environment
    environment:
      name: cloudflare

    runs-on: ubuntu-latest
    name: Deploy To Cloudflare
    steps:
      - uses: actions/checkout@v3
      - name: Publish
        uses: cloudflare/wrangler-action@2.0.0
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          accountId: ${{ secrets.CF_ACCOUNT_ID }}
          preCommands: export COMMIT_HASH=(git rev-parse --short HEAD)
          command: |
            pages publish dist/en --project-name=viz-rs --commit-hash=$COMMIT_HASH
            pages publish dist/zh-cn --project-name=viz-rs-zh-cn --commit-hash=$COMMIT_HASH
