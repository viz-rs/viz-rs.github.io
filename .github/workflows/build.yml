name: Rust

on:
  pull_request:
  # Trigger the workflow every time you push to the `main` branch
  # Using a different branch name? Replace `main` with your branchâ€™s name
  push:
    branches: [main]
  # Allows you to run this workflow manually from the Actions tab on GitHub.
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

env:
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  RUSTFLAGS: -D warnings
  RUSTUP_MAX_RETRIES: 10

jobs:
  build:
    environment:
      name: cloudflare
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 18.x

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@v1  
        with:
          toolchain: nightly
          target: wasm32-unknown-unknown

      - name: Install Trunk & Just
        run: |
          cargo install --locked trunk
          cargo install --locked just
          mkdir -p dist/{en,zh-cn}

      - name: Init App
        run: just app

      - name: Build en
        run: just build-en

      - name: Build zh-cn
        run: just build-zh-cn

      - name: Deploy en To Cloudflare
        uses: cloudflare/wrangler-action@2.0.0
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          accountId: ${{ secrets.CF_ACCOUNT_ID }}
          command: |
            pages publish dist/en --project-name=viz-rs --commit-dirty=true

      - name: Deploy zh-cn To Cloudflare
        uses: cloudflare/wrangler-action@2.0.0
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          accountId: ${{ secrets.CF_ACCOUNT_ID }}
          command: |
            pages publish dist/zh-cn --project-name=viz-rs-zh-cn --commit-dirty=true

      - name: Deploy zh-cn To Cloudflare
        uses: cloudflare/wrangler-action@2.0.0
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          accountId: ${{ secrets.CF_ACCOUNT_ID }}
          command: |
            pages deployment
